<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnPDF.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /5ak34zs/h8DJ/X41hQbsAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btnExcelExport.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>